(()=>{"use strict";var e={706:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0});class n{constructor(){this.name="",this.sequence="",this.id=1}}class s{parse(e){var t=new n;if(!e||0===e.length)return[];var s=e.split("\n"),i=new Array;for(var o of s)">"===o[0]||";"===o[0]?(""!=t.sequence&&(i.push({id:t.id,name:t.name,sequence:t.sequence}),t.sequence="",t.name=""),t.name=o.slice(1)):t.sequence+=o;return i.push(t),i}write(e){for(var t="",n=0;n<e.length;n++)t+=">"+e[n].name+"\n",t+=this.splitNchar(e[n].sequence,80).join("\n"),n!=e.length-1&&(t+="\n");return t}splitNchar(e,t){var n,s;t=t||80;var i=[];for(n=0,s=e.length-1;n<=s;n+=t)i.push(e.substr(n,t));return i}}t.Fasta=s,e.exports.fasta=new s},18:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.SequenceChopper=void 0;class n{constructor(e,t=18,n=10,s="GSDENQHPCAT",i=3){if(this.sequence=e,this.peptideLength=t,this.overlap=n,this.peptideLength<1)throw new Error("Peptide length needs to be >= 1!");this.verifySequence(),this.disallowedEndsRE=new RegExp(`(?<![${s}])[${s}]{1,${i}}$`)}verifySequence(){if(!/[ACDEFGHIKLMNPQRSTVWYXBZJ]+/.test(this.sequence))throw new Error("Invalid amino acid sequence!")}nextPeptide(e){if(e>=this.sequence.length)return{position:this.sequence.length,peptide:""};let t=Math.max(e-this.overlap,0);const n=Math.min(t+this.peptideLength,this.sequence.length);let s=!1;if(n-t<this.peptideLength&&(s=!0,t=n-this.peptideLength,t<0))throw new Error("Cannot fit a new peptide into the sequence. This should not happen!");let i=this.sequence.slice(t,n).replace(this.disallowedEndsRE,""),o=Math.min(t+i.length,this.sequence.length);return s&&(o=this.sequence.length),{position:o,peptide:i}}[Symbol.iterator](){let e=0;const t=this;let n="";return{next(){const s=e>=t.sequence.length;if(!s){const s=t.nextPeptide(e);e=s.position,n=s.peptide}return{done:s,value:n}}}}}t.SequenceChopper=n}},t={};function n(s){var i=t[s];if(void 0!==i)return i.exports;var o=t[s]={exports:{}};return e[s](o,o.exports,n),o.exports}(()=>{const e=n(18),t=n(706),s=document.getElementById("input"),i=document.getElementById("outputs"),o=document.getElementById("peptide-length"),r=document.getElementById("overlap"),a=document.createElement("div");function c(e){return function(){let t="",n=1;for(const s of l(e.sequence))t+=`>${e.name}:peptide_${n++}\n${s}\n`;const s=document.createElement("a");s.setAttribute("href","data:text/plain;charset=ascii,"+encodeURIComponent(t)),s.setAttribute("download",e.name+"_peptides.fasta"),s.style.display="none",document.body.appendChild(s),s.click(),document.body.removeChild(s)}}function d(e){return function(){const t=[...l(e.sequence)].join("\n");navigator.clipboard.writeText(t)}}function l(t){const n=o.valueAsNumber,s=r.valueAsNumber;return new e.SequenceChopper(t,n,s)}function u(){var e,n;r.setAttribute("max",""+(o.valueAsNumber-1));const u=new t.Fasta,p=s.value;if(""==p)return;const h=u.parse(p),m=[];for(const t of h){const s=document.createElement("div");s.classList.add("peptide-display");const i=a.cloneNode(!0);null===(e=i.querySelector(".download-fasta-button"))||void 0===e||e.addEventListener("click",c(t)),null===(n=i.querySelector(".copy-clipboard-button"))||void 0===n||n.addEventListener("click",d(t)),s.appendChild(i);const o=document.createElement("h2");o.innerText=t.name,s.appendChild(o);const r=document.createElement("ul");s.appendChild(r);for(const e of l(t.sequence)){const t=document.createElement("li");t.innerText=e,r.appendChild(t)}m.push(s)}i.replaceChildren(...m)}a.classList.add("peptide-tool-bar"),a.innerHTML='\n    <button class="download-fasta-button" title="Download peptides as FASTA file"><span class="material-symbols-outlined">download</span>\n    <button class="copy-clipboard-button" title="Copy peptide sequences to clipboard""><span class="material-symbols-outlined">content_copy</span>\n',s.addEventListener("input",u),o.addEventListener("change",u),r.addEventListener("change",u),u()})()})();